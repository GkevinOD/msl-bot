#Region ; GUI generated by GUIBuilderNxt Prototype 1.0

	#include <Constants.au3>
	#include <GUIConstantsEx.au3>
	#include <Misc.au3>
	#include <WindowsConstants.au3>
	#include <StaticConstants.au3>
	#include <ListBoxConstants.au3>
	#include <ButtonConstants.au3>
	#include <FileConstants.au3>
	#include <MsgBoxConstants.au3>
	#include <GDIPlus.au3>
	#include <GuiListView.au3>

	_GDIPlus_Startup()
	Func BuildGui()
		Global $MainStyle = BitOR($WS_OVERLAPPED, $WS_CAPTION, $WS_SYSMENU, $WS_VISIBLE, $WS_CLIPSIBLINGS, $WS_MINIMIZEBOX)
		Global $g_hImageWindow = GuiCreate("Image Pixel Color Picker", 962, 554, -1, -1, $MainStyle)
		
		Global $g_hImageControl = GuiCtrlCreatePic($g_FilePath & "ScreenShots\12-21-2018\Screenshot_2018-12-21-14-27-34.bmp", 0, 0, 800, 552, $SS_NOTIFY)
		Global $g_hImageHandle = ControlGetHandle($g_hImageWindow, "", $g_hImageControl)
		Global $g_hChosenPointsListView = GuiCtrlCreateListView("", 802, 0, 160, 460)
		_GUICtrlListView_AddColumn($g_hChosenPointsListView, "x", 40, 0)
		_GUICtrlListView_AddColumn($g_hChosenPointsListView, "y", 40, 0)
		_GUICtrlListView_AddColumn($g_hChosenPointsListView, "Color", 80, 0)
		
		Global $g_hBtnDel = GuiCtrlCreateButton("Delete", 810, 470, 60, 20)
		Global $g_hBtnClearAll = GuiCtrlCreateButton("Clear All", 890, 470, 60, 20)
		GUICtrlCreateGraphic(810,510,140,1,$SS_BLACKRECT)
		Global $g_hBtnCancel = GuiCtrlCreateButton("Cancel", 810, 530, 60, 20)
		Global $g_hBtnSave = GuiCtrlCreateButton("Save", 890, 530, 60, 20)
	EndFunc

	Func BuildMenus()
		Global $g_hFileMenu = GUICtrlCreateMenu("File")
		Global $g_OpenImage = GUICtrlCreateMenuItem("Open Image", $g_hFileMenu)
	EndFunc
	
	Func BuildGlobals()
		Global $g_FilePath = "G:\MSL\images\"
		Global $g_aColorList[0][3]
		Global $hBitmap = _GDIPlus_BitmapCreateFromFile($g_FilePath & "ScreenShots\12-21-2018\Screenshot_2018-12-21-14-27-34.bmp")
	EndFunc

	GuiSetState(@SW_SHOW)

	GUIRegisterMsg($WM_COMMAND, "WM_COMMAND")

	Do
		Switch GuiGetMsg()
			Case $GUI_EVENT_CLOSE
				ExitLoop
			Case Else
				;
		EndSwitch
	Until False

	Func WM_COMMAND($hWnd, $iMsg, $wParam, $lParam)
		#forceref $hWnd, $iMsg, $wParam

		Local $nNotifyCode = BitShift($wParam, 16)
		Local $nID = BitAND($wParam, 0xFFFF)
		Local $hCtrl = $lParam
		Switch $nNotifyCode
			Case $BN_CLICKED
				Switch $nID
					Case $g_hImageControl
						Local $iX = _WinAPI_GetMousePosX(True, $g_hImageHandle)
						Local $iY = _WinAPI_GetMousePosY(True, $g_hImageHandle)
						addColorToList($iX, $iY)
					Case $g_hBtnDel
						If (Ubound($g_aColorList) > 0) Then 
							Local $item = _GUICtrlListView_GetSelectedIndices($g_hChosenPointsListView)
							If ($item <> "") Then
								_ArrayDelete($g_aColorList, $item)
							Else
								MsgBox($MB_OK, "No Items Selected", "Please select an item from the list and try again.")
							EndIf
						EndIf
					Case $g_hBtnClearAll
						If (Ubound($g_aColorList) > 0) Then 
							Local $bCheckClear = MsgBox($MB_YESNO, "Are you sure?", "Are you sure you want to clear the entire list?")
							If ($bCheckClear = $IDYES) Then
								Global $g_aColorList[0][3]
								refreshListview()
							EndIf
						EndIf
					Case $g_hBtnSave
						_ArrayToClip($g_aColorList, ",", -1, -1 , "|")
					Case $g_hBtnCancel
						Exit
				EndSwitch
		EndSwitch
	EndFunc

	Func addColorToList($iX, $iY)
		Local $sColor = getColor($iX, $iY, $g_hImageHandle)
		Local $iExists = checkIfExistsInArray($iX, $iY)
		If ($iExists = -1) Then
			Local $sPixel = $iX & "|" & $iY & "|" & $sColor
			_ArrayAdd($g_aColorList, $sPixel)
		Else
			$g_aColorList[$iExists][2] = $sColor
		EndIf
		refreshListview()
	EndFunc

	Func refreshListview()
		_GUICtrlListView_DeleteAllItems($g_hChosenPointsListView)
		_GUICtrlListView_AddArray($g_hChosenPointsListView, $g_aColorList)
	EndFunc

	Func checkIfExistsInArray($iX, $iY)
		If (UBound($g_aColorList) < 1) Then Return -1
		For $l = 0 To UBound($g_aColorList) - 1
			If ($g_aColorList[$l][0] = $iX And $g_aColorList[$l][1] = $iY) Then Return $l
		Next
		Return -1
	EndFunc

	Func getColor($iX, $iY, $hWnd)
		Opt("PixelCoordMode",0)
		Local $sColor = "0x" & Hex(PixelGetColor($iX, $iY, $hWnd), 6)
		Opt("PixelCoordMode",1)
		Return $sColor
	EndFunc

	Func GetOpenFile()
		Local Const $sMessage = "Select an image to open."
		Local $sFileOpenDialog = FileOpenDialog($sMessage, @ScriptDir & "\", "Images (*.jpg;*.bmp;*.png;*.gif)", $FD_FILEMUSTEXIST)
		If @error Then
			MsgBox($MB_SYSTEMMODAL, "", "No file(s) were selected.")
			$sFileOpenDialog = 0
		EndIf

		FileChangeDir(@ScriptDir)
		Return $sFileOpenDialog
	EndFunc   ;==>Example

#EndRegion